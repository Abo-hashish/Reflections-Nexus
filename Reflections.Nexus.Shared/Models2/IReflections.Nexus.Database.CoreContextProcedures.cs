// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using Reflections.Nexus.Shared.Models2;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace Reflections.Nexus.Shared.Models2
{
    public partial interface IReflections.Nexus.Database.Core.ContextProcedures
    {
        Task<List<AuditDeleteResult>> AuditDeleteAsync(int? AuditId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AuditInsertResult>> AuditInsertAsync(string ObjectName, int? RecordId, string PropertyName, string OldValue, string NewValue, byte? AuditType, int? CreatedBy, OutputParameter<int?> AuditId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AuditObjectDeleteResult>> AuditObjectDeleteAsync(int? AuditObjectId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AuditObjectInsertResult>> AuditObjectInsertAsync(string ObjectName, string ObjectFullyQualifiedName, int? CreatedBy, OutputParameter<int?> AuditObjectId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AuditObjectPropertyDeleteResult>> AuditObjectPropertyDeleteAsync(int? AuditObjectPropertyId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AuditObjectPropertyDeleteByAuditObjectIdResult>> AuditObjectPropertyDeleteByAuditObjectIdAsync(int? AuditObjectId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AuditObjectPropertyInsertResult>> AuditObjectPropertyInsertAsync(int? AuditObjectId, string PropertyName, int? CreatedBy, OutputParameter<int?> AuditObjectPropertyId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AuditObjectPropertySelectAllResult>> AuditObjectPropertySelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AuditObjectPropertySelectByAuditObjectIdResult>> AuditObjectPropertySelectByAuditObjectIdAsync(int? AuditObjectId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AuditObjectPropertySelectByIdResult>> AuditObjectPropertySelectByIdAsync(int? AuditObjectPropertyId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AuditObjectPropertyUpdateResult>> AuditObjectPropertyUpdateAsync(int? AuditObjectPropertyId, int? AuditObjectId, string PropertyName, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AuditObjectSelectAllResult>> AuditObjectSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AuditObjectSelectByIdResult>> AuditObjectSelectByIdAsync(int? AuditObjectId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AuditObjectSelectByObjectNameResult>> AuditObjectSelectByObjectNameAsync(string ObjectName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AuditObjectUpdateResult>> AuditObjectUpdateAsync(int? AuditObjectId, string ObjectName, string ObjectFullyQualifiedName, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AuditSelectAllResult>> AuditSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AuditSelectByIdResult>> AuditSelectByIdAsync(int? AuditId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AuditUpdateResult>> AuditUpdateAsync(int? AuditId, string ObjectName, int? RecordId, string PropertyName, string OldValue, string NewValue, byte? AuditType, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CapabilitySelectAllResult>> CapabilitySelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CapabilitySelectByIdResult>> CapabilitySelectByIdAsync(int? CapabilityId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<EmailDeleteResult>> EmailDeleteAsync(int? EmailId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<EmailInsertResult>> EmailInsertAsync(string ToEmailAddress, string CCEmailAddress, string BCCEmailAddress, string FromEmailAddress, string Subject, string Body, byte? EmailStatusFlag, int? CreatedBy, OutputParameter<int?> EmailId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<EmailSelectAllResult>> EmailSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<EmailSelectByEmailStatusFlagResult>> EmailSelectByEmailStatusFlagAsync(byte? EmailStatusFlag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<EmailSelectByIdResult>> EmailSelectByIdAsync(int? EmailId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<EmailUpdateResult>> EmailUpdateAsync(int? EmailId, string ToEmailAddress, string CCEmailAddress, string BCCEmailAddress, string FromEmailAddress, string Subject, string Body, byte? EmailStatusFlag, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<HolidayDeleteResult>> HolidayDeleteAsync(int? HolidayId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<HolidayInsertResult>> HolidayInsertAsync(string HolidayName, DateTime? HolidayDate, int? CreatedBy, OutputParameter<int?> HolidayId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<HolidaySelectAllResult>> HolidaySelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<HolidaySelectByIdResult>> HolidaySelectByIdAsync(int? HolidayId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<HolidayUpdateResult>> HolidayUpdateAsync(int? HolidayId, string HolidayName, DateTime? HolidayDate, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<MenuItemSelectAllResult>> MenuItemSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationDeleteResult>> NotificationDeleteAsync(int? NotificationId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationInsertResult>> NotificationInsertAsync(string Description, string FromEmailAddress, string Subject, string Body, int? CreatedBy, OutputParameter<int?> NotificationId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationSelectAllResult>> NotificationSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationSelectByIdResult>> NotificationSelectByIdAsync(int? NotificationId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationSelectByIdUserAccountIdResult>> NotificationSelectByIdUserAccountIdAsync(int? NotificationId, int? UserAccountid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationUpdateResult>> NotificationUpdateAsync(int? NotificationId, string Description, string FromEmailAddress, string Subject, string Body, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationUserAccountDeleteResult>> NotificationUserAccountDeleteAsync(int? NotificationUserAccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationUserAccountInsertResult>> NotificationUserAccountInsertAsync(int? NotificationId, int? UserAccountId, int? CreatedBy, OutputParameter<int?> NotificationUserAccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationUserAccountSelectAllResult>> NotificationUserAccountSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationUserAccountSelectByIdResult>> NotificationUserAccountSelectByIdAsync(int? NotificationUserAccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationUserAccountSelectByUserAccountIdResult>> NotificationUserAccountSelectByUserAccountIdAsync(int? UserAccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationUserAccountSelectByWorkFlowStateIdResult>> NotificationUserAccountSelectByWorkFlowStateIdAsync(int? WorkFlowStateId, int? NotificationId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationUserAccountUpdateResult>> NotificationUserAccountUpdateAsync(int? NotificationUserAccountId, int? NotificationId, int? UserAccountId, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationWorkFlowStateDeleteResult>> NotificationWorkFlowStateDeleteAsync(int? NotificationWorkFlowStateId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationWorkFlowStateDeleteByNotificationUserAccountIdResult>> NotificationWorkFlowStateDeleteByNotificationUserAccountIdAsync(int? NotificationUserAccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationWorkFlowStateInsertResult>> NotificationWorkFlowStateInsertAsync(int? NotificationUserAccountId, int? WorkFlowStateId, int? CreatedBy, OutputParameter<int?> NotificationWorkFlowStateId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationWorkFlowStateSelectAllResult>> NotificationWorkFlowStateSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationWorkFlowStateSelectByIdResult>> NotificationWorkFlowStateSelectByIdAsync(int? NotificationWorkFlowStateId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationWorkFlowStateSelectByNotificationUserAccountIdResult>> NotificationWorkFlowStateSelectByNotificationUserAccountIdAsync(int? NotificationUserAccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationWorkFlowStateSelectByWorkFlowStateIdResult>> NotificationWorkFlowStateSelectByWorkFlowStateIdAsync(int? WorkFlowStateId, int? NotificationId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationWorkFlowStateUpdateResult>> NotificationWorkFlowStateUpdateAsync(int? NotificationWorkFlowStateId, int? NotificationUserAccountId, int? WorkFlowStateId, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffDayTypeSelectAllResult>> PaidTimeOffDayTypeSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffDayTypeSelectByIdResult>> PaidTimeOffDayTypeSelectByIdAsync(int? PaidTimeOffDayTypeId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffRequestDeleteResult>> PaidTimeOffRequestDeleteAsync(int? PaidTimeOffRequestId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffRequestInsertResult>> PaidTimeOffRequestInsertAsync(int? UserAccountId, DateTime? RequestDate, int? PaidTimeOffDayTypeId, int? PaidTimeOffRequestTypeId, int? CreatedBy, OutputParameter<int?> PaidTimeOffRequestId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffRequestSelectAllResult>> PaidTimeOffRequestSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffRequestSelectByCurrentOwnerResult>> PaidTimeOffRequestSelectByCurrentOwnerAsync(int? UserAccountId, string WorkFlowObjectName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffRequestSelectByIdResult>> PaidTimeOffRequestSelectByIdAsync(int? PaidTimeOffRequestId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffRequestSelectByUserAccountIdResult>> PaidTimeOffRequestSelectByUserAccountIdAsync(int? UserAccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffRequestSelectByUserAccountIdYearResult>> PaidTimeOffRequestSelectByUserAccountIdYearAsync(int? PaidTimeOffRequestId, int? UserAccountId, short? VacationYear, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffRequestSelectPreviousByUserAccountIdResult>> PaidTimeOffRequestSelectPreviousByUserAccountIdAsync(int? PaidTimeOffRequestId, int? UserAccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffRequestTypeSelectAllResult>> PaidTimeOffRequestTypeSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffRequestTypeSelectByIdResult>> PaidTimeOffRequestTypeSelectByIdAsync(int? PaidTimeOffRequestTypeId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffRequestUpdateResult>> PaidTimeOffRequestUpdateAsync(int? PaidTimeOffRequestId, int? UserAccountId, DateTime? RequestDate, int? PaidTimeOffDayTypeId, int? PaidTimeOffRequestTypeId, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffRequestUpdateCancelledResult>> PaidTimeOffRequestUpdateCancelledAsync(int? PaidTimeOffRequestId, bool? Cancelled, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffVacationBankCopyYearResult>> PaidTimeOffVacationBankCopyYearAsync(short? FromYear, short? ToYear, int? CreatedBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffVacationBankDeleteResult>> PaidTimeOffVacationBankDeleteAsync(int? PaidTimeOffVacationBankId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffVacationBankInsertResult>> PaidTimeOffVacationBankInsertAsync(int? UserAccountId, short? VacationYear, byte? PersonalDays, byte? VacationDays, int? CreatedBy, OutputParameter<int?> PaidTimeOffVacationBankId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffVacationBankIsDuplicateResult>> PaidTimeOffVacationBankIsDuplicateAsync(int? PaidTimeOffVacationBankId, int? UserAccountId, short? VacationYear, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffVacationBankSelectAllResult>> PaidTimeOffVacationBankSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffVacationBankSelectByIdResult>> PaidTimeOffVacationBankSelectByIdAsync(int? PaidTimeOffVacationBankId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffVacationBankSelectByUserAccountIdYearResult>> PaidTimeOffVacationBankSelectByUserAccountIdYearAsync(int? UserAccountid, short? VacationYear, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffVacationBankSelectDistinctYearsResult>> PaidTimeOffVacationBankSelectDistinctYearsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PaidTimeOffVacationBankUpdateResult>> PaidTimeOffVacationBankUpdateAsync(int? PaidTimeOffVacationBankId, int? UserAccountId, short? VacationYear, byte? PersonalDays, byte? VacationDays, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Report_RoleCapabilityResult>> Report_RoleCapabilityAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportAuditResult>> ReportAuditAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportDeleteResult>> ReportDeleteAsync(int? ReportId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportInsertResult>> ReportInsertAsync(string ReportName, string FileName, string ObjectName, string Description, string SubReportObjectName, string SubReportMethodName, int? CreatedBy, OutputParameter<int?> ReportId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportMyPaidTimeOffRequestsResult>> ReportMyPaidTimeOffRequestsAsync(string WorkFlowObjectName, int? UserAccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportRoleCapabilityResult>> ReportRoleCapabilityAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportRoleUserAccountResult>> ReportRoleUserAccountAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportSelectAllResult>> ReportSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportSelectByIdResult>> ReportSelectByIdAsync(int? ReportId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportUpdateResult>> ReportUpdateAsync(int? ReportId, string ReportName, string FileName, string ObjectName, string Description, string SubReportObjectName, string SubReportMethodName, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RoleCapabilityDeleteResult>> RoleCapabilityDeleteAsync(int? RoleCapabilityId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RoleCapabilityInsertResult>> RoleCapabilityInsertAsync(int? RoleId, int? CapabilityId, byte? AccessFlag, int? CreatedBy, OutputParameter<int?> RoleCapabilityId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RoleCapabilitySelectAllResult>> RoleCapabilitySelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RoleCapabilitySelectByIdResult>> RoleCapabilitySelectByIdAsync(int? RoleCapabilityId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RoleCapabilitySelectByRoleIdResult>> RoleCapabilitySelectByRoleIdAsync(int? RoleId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RoleCapabilityUpdateResult>> RoleCapabilityUpdateAsync(int? RoleCapabilityId, int? RoleId, int? CapabilityId, byte? AccessFlag, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RoleDeleteResult>> RoleDeleteAsync(int? RoleId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RoleInsertResult>> RoleInsertAsync(string RoleName, int? CreatedBy, OutputParameter<int?> RoleId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RoleSelectAllResult>> RoleSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RoleSelectByIdResult>> RoleSelectByIdAsync(int? RoleId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RoleSelectByUserAccountIdResult>> RoleSelectByUserAccountIdAsync(int? UserAccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RoleUpdateResult>> RoleUpdateAsync(int? RoleId, string RoleName, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RoleUserAccountDeleteResult>> RoleUserAccountDeleteAsync(int? RoleUserAccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RoleUserAccountInsertResult>> RoleUserAccountInsertAsync(int? RoleId, int? UserAccountId, int? CreatedBy, OutputParameter<int?> RoleUserAccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RoleUserAccountSelectAllResult>> RoleUserAccountSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RoleUserAccountSelectByIdResult>> RoleUserAccountSelectByIdAsync(int? RoleUserAccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RoleUserAccountSelectByRoleIdResult>> RoleUserAccountSelectByRoleIdAsync(int? RoleId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RoleUserAccountUpdateResult>> RoleUserAccountUpdateAsync(int? RoleUserAccountId, int? RoleId, int? UserAccountId, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UserAccountDeleteResult>> UserAccountDeleteAsync(int? UserAccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UserAccountInsertResult>> UserAccountInsertAsync(string AccountName, string FirstName, string LastName, string Email, bool? IsActive, int? CreatedBy, OutputParameter<int?> UserAccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UserAccountSelectAllResult>> UserAccountSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UserAccountSelectByIdResult>> UserAccountSelectByIdAsync(int? UserAccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UserAccountSelectByWorkFlowOwnerGroupIdResult>> UserAccountSelectByWorkFlowOwnerGroupIdAsync(int? WorkFlowOwnerGroupId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UserAccountUpdateResult>> UserAccountUpdateAsync(int? UserAccountId, string AccountName, string FirstName, string LastName, string Email, bool? IsActive, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowDeleteResult>> WorkFlowDeleteAsync(int? WorkFlowId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowInsertResult>> WorkFlowInsertAsync(string WorkflowName, string WorkFlowObjectName, int? CreatedBy, OutputParameter<int?> WorkFlowId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowItemDeleteResult>> WorkFlowItemDeleteAsync(int? WorkFlowItemId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowItemInsertResult>> WorkFlowItemInsertAsync(int? WorkFlowId, int? ItemId, int? SubmitterUserAccountId, int? CurrWorkFlowStateId, int? CreatedBy, OutputParameter<int?> WorkFlowItemId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowItemOwnerDeleteResult>> WorkFlowItemOwnerDeleteAsync(int? WorkFlowItemOwnerId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowItemOwnerInsertResult>> WorkFlowItemOwnerInsertAsync(int? WorkFlowItemId, int? WorkFlowOwnerGroupId, int? UserAccountId, int? CreatedBy, OutputParameter<int?> WorkFlowItemOwnerId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowItemOwnerSelectAllResult>> WorkFlowItemOwnerSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowItemOwnerSelectByIdResult>> WorkFlowItemOwnerSelectByIdAsync(int? WorkFlowItemOwnerId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowItemOwnerSelectByWorkFlowItemIdResult>> WorkFlowItemOwnerSelectByWorkFlowItemIdAsync(int? WorkFlowItemId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowItemOwnerSelectLastUserByGroupIdResult>> WorkFlowItemOwnerSelectLastUserByGroupIdAsync(int? WorkFlowOwnerGroupId, int? UserAccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowItemOwnerUpdateResult>> WorkFlowItemOwnerUpdateAsync(int? WorkFlowItemOwnerId, int? WorkFlowItemId, int? WorkFlowOwnerGroupId, int? UserAccountId, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowItemSelectAllResult>> WorkFlowItemSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowItemSelectByIdResult>> WorkFlowItemSelectByIdAsync(int? WorkFlowItemId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowItemSelectByItemIdResult>> WorkFlowItemSelectByItemIdAsync(int? WorkFlowId, int? ItemId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowItemSelectByWorkflowIdResult>> WorkFlowItemSelectByWorkflowIdAsync(int? WorkFlowId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowItemStateHistoryDeleteResult>> WorkFlowItemStateHistoryDeleteAsync(int? WorkFlowItemStateHistoryId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowItemStateHistoryInsertResult>> WorkFlowItemStateHistoryInsertAsync(int? WorkFlowItemId, int? WorkFlowStateId, int? UserAccountId, int? CreatedBy, OutputParameter<int?> WorkFlowItemStateHistoryId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowItemStateHistorySelectAllResult>> WorkFlowItemStateHistorySelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowItemStateHistorySelectByIdResult>> WorkFlowItemStateHistorySelectByIdAsync(int? WorkFlowItemStateHistoryId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowItemStateHistorySelectByWorkFlowItemIdResult>> WorkFlowItemStateHistorySelectByWorkFlowItemIdAsync(int? WorkFlowItemId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowItemStateHistoryUpdateResult>> WorkFlowItemStateHistoryUpdateAsync(int? WorkFlowItemStateHistoryId, int? WorkFlowItemId, int? WorkFlowStateId, int? UserAccountId, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowItemUpdateResult>> WorkFlowItemUpdateAsync(int? WorkFlowItemId, int? WorkFlowId, int? ItemId, int? SubmitterUserAccountId, int? CurrWorkFlowStateId, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowOwnerGroupDeleteResult>> WorkFlowOwnerGroupDeleteAsync(int? WorkFlowOwnerGroupId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowOwnerGroupInsertResult>> WorkFlowOwnerGroupInsertAsync(int? WorkFlowId, string OwnerGroupName, int? DefaultUserAccountId, bool? IsDefaultSameAsLast, string Description, int? CreatedBy, OutputParameter<int?> WorkFlowOwnerGroupId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowOwnerGroupSelectAllResult>> WorkFlowOwnerGroupSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowOwnerGroupSelectByIdResult>> WorkFlowOwnerGroupSelectByIdAsync(int? WorkFlowOwnerGroupId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowOwnerGroupSelectByWorkFlowIdResult>> WorkFlowOwnerGroupSelectByWorkFlowIdAsync(int? WorkFlowId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowOwnerGroupSelectCountByNameWorkflowIdResult>> WorkFlowOwnerGroupSelectCountByNameWorkflowIdAsync(int? WorkFlowOwnerGroupId, int? WorkFlowId, string OwnerGroupName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowOwnerGroupUpdateResult>> WorkFlowOwnerGroupUpdateAsync(int? WorkFlowOwnerGroupId, int? WorkFlowId, string OwnerGroupName, int? DefaultUserAccountId, bool? IsDefaultSameAsLast, string Description, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowOwnerGroupUserAccountDeleteResult>> WorkFlowOwnerGroupUserAccountDeleteAsync(int? WorkFlowOwnerGroupUserAccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowOwnerGroupUserAccountInsertResult>> WorkFlowOwnerGroupUserAccountInsertAsync(int? WorkFlowOwnerGroupId, int? UserAccountId, int? CreatedBy, OutputParameter<int?> WorkFlowOwnerGroupUserAccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowOwnerGroupUserAccountSelectAllResult>> WorkFlowOwnerGroupUserAccountSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowOwnerGroupUserAccountSelectByIdResult>> WorkFlowOwnerGroupUserAccountSelectByIdAsync(int? WorkFlowOwnerGroupUserAccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowOwnerGroupUserAccountSelectByWorkFlowOwnerGroupIdResult>> WorkFlowOwnerGroupUserAccountSelectByWorkFlowOwnerGroupIdAsync(int? WorkFlowOwnerGroupId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowOwnerGroupUserAccountUpdateResult>> WorkFlowOwnerGroupUserAccountUpdateAsync(int? WorkFlowOwnerGroupUserAccountId, int? WorkFlowOwnerGroupId, int? UserAccountId, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowSelectAllResult>> WorkFlowSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowSelectByIdResult>> WorkFlowSelectByIdAsync(int? WorkFlowId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowSelectByObjectNameResult>> WorkFlowSelectByObjectNameAsync(string WorkFlowObjectName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowStateDeleteResult>> WorkFlowStateDeleteAsync(int? WorkFlowStateId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowStateInsertResult>> WorkFlowStateInsertAsync(int? WorkFlowId, string StateName, string Description, int? WorkFlowOwnerGroupId, bool? IsOwnerSubmitter, int? CreatedBy, OutputParameter<int?> WorkFlowStateId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowStatePropertyDeleteResult>> WorkFlowStatePropertyDeleteAsync(int? WorkFlowStatePropertyId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowStatePropertyDeleteByWorkFlowStateIdResult>> WorkFlowStatePropertyDeleteByWorkFlowStateIdAsync(int? WorkFlowStateId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowStatePropertyInsertResult>> WorkFlowStatePropertyInsertAsync(int? WorkFlowStateId, string PropertyName, bool? Required, bool? ReadOnly, int? CreatedBy, OutputParameter<int?> WorkFlowStatePropertyId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowStatePropertySelectAllResult>> WorkFlowStatePropertySelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowStatePropertySelectByIdResult>> WorkFlowStatePropertySelectByIdAsync(int? WorkFlowStatePropertyId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowStatePropertySelectByWorkFlowStateIdResult>> WorkFlowStatePropertySelectByWorkFlowStateIdAsync(int? WorkFlowStateId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowStatePropertyUpdateResult>> WorkFlowStatePropertyUpdateAsync(int? WorkFlowStatePropertyId, int? WorkFlowStateId, string PropertyName, bool? Required, bool? ReadOnly, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowStateSelectAllResult>> WorkFlowStateSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowStateSelectByIdResult>> WorkFlowStateSelectByIdAsync(int? WorkFlowStateId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowStateSelectByWorkFlowIdResult>> WorkFlowStateSelectByWorkFlowIdAsync(int? WorkFlowId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowStateSelectCountByWorkFlowOwnerGroupIdResult>> WorkFlowStateSelectCountByWorkFlowOwnerGroupIdAsync(int? WorkFlowOwnerGroupId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowStateUpdateResult>> WorkFlowStateUpdateAsync(int? WorkFlowStateId, int? WorkFlowId, string StateName, string Description, int? WorkFlowOwnerGroupId, bool? IsOwnerSubmitter, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowTransitionDeleteResult>> WorkFlowTransitionDeleteAsync(int? WorkFlowTransitionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowTransitionInsertResult>> WorkFlowTransitionInsertAsync(int? WorkFlowId, string TransitionName, int? FromWorkFlowStateId, int? ToWorkFlowStateId, string PostTransitionMethodName, int? CreatedBy, OutputParameter<int?> WorkFlowTransitionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowTransitionSelectAllResult>> WorkFlowTransitionSelectAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowTransitionSelectByFromStateIdResult>> WorkFlowTransitionSelectByFromStateIdAsync(int? FromWorkFlowStateId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowTransitionSelectByIdResult>> WorkFlowTransitionSelectByIdAsync(int? WorkFlowTransitionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowTransitionUpdateResult>> WorkFlowTransitionUpdateAsync(int? WorkFlowTransitionId, int? WorkFlowId, string TransitionName, int? FromWorkFlowStateId, int? ToWorkFlowStateId, string PostTransitionMethodName, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<WorkFlowUpdateResult>> WorkFlowUpdateAsync(int? WorkFlowId, string WorkflowName, string WorkFlowObjectName, int? UpdatedBy, byte[] RowVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
