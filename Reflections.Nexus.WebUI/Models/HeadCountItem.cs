// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;
using Reflections.Nexus.WebUI.Code;

namespace Reflections.Nexus.WebUI.Models;

[Table("HeadCountItem")]
[Index("EmployeeId", Name = "IX_HeadCountItem_EmployeeId")]
[Index("GenderId", Name = "IX_HeadCountItem_GenderId")]
[Index("HeadCountTypeId", Name = "IX_HeadCountItem_HeadCountTypeId")]
[Index("IdentificationTypeId", Name = "IX_HeadCountItem_IdentificationTypeId")]
[Index("JobTypeId", Name = "IX_HeadCountItem_JobTypeId")]
[Index("ManagerId", Name = "IX_HeadCountItem_ManagerId")]
[Index("MaritalStatusId", Name = "IX_HeadCountItem_MaritalStatusId")]
[Index("MilitaryStatusId", Name = "IX_HeadCountItem_MilitaryStatusId")]
public partial class HeadCountItem : BaseEntity
{
    [Display(Name = "Head Count Type")]
    public int HeadCountTypeId { get; set; }

    [Display(Name = "Employee")]
    public int? EmployeeId { get; set; }

    [Required]
    [StringLength(50)]
    [Display(Name = "First Name")]
    [RegularExpression(@"^[a-zA-Z\s]+$", ErrorMessage = "First Name can only contain alphabetic characters and spaces.")]
    public string FirstName { get; set; }

    [Display(Name = "Middle Name")]
    [StringLength(200)]
    [RegularExpression(@"^[a-zA-Z\s]*$", ErrorMessage = "Middle Name can only contain alphabetic characters and spaces.")]
    public string MiddleName { get; set; }

    [Display(Name = "Last Name")]
    [Required]
    [StringLength(50)]
    [RegularExpression(@"^[a-zA-Z\s]+$", ErrorMessage = "Last Name can only contain alphabetic characters and spaces.")]
    public string LastName { get; set; }

    public string FullName => $"{FirstName} {MiddleName} {LastName}";

    [Required]
    [StringLength(500)]
    public string Address { get; set; }

    [Display(Name = "Gender")]
    public int GenderId { get; set; }

    [Display(Name = "Marital Status")]
    public int MaritalStatusId { get; set; }

    [Display(Name = "Military Status")]
    public int? MilitaryStatusId { get; set; }

    [Display(Name = "Manager")]
    public int? ManagerId { get; set; }

    [Display(Name = "Date of Birth")]
    [Column(TypeName = "date")]
    public DateTime BirthDate { get; set; }

    [Display(Name = "Job Type")]
    public int JobTypeId { get; set; }

    [Display(Name = "Date of Joining")]
    [Column(TypeName = "date")]
    public DateTime JoiningDate { get; set; }

    [Required]
    [RegularExpression(@"^\d+$", ErrorMessage = "The Identification must be a valid integer.")]
    [Display(Name = "Identification")]
    public string Identification { get; set; }

    [Display(Name = "Identification Type")]
    public int IdentificationTypeId { get; set; }

    [Display(Name = "Employment Type")]
    public int? EmploymentTypeId { get; set; }

    public int Salary { get; set; }

    [Display(Name = "Nationality")]
    public int NationalityId { get; set; }

    [Display(Name = "Medical Insurance")]
    [StringLength(50)]
    public string MedicalInsurance { get; set; }

    [Display(Name = "IT Check Date")]
    [Column("ITCheckDate", TypeName = "datetime")]
    public DateTime? ItcheckDate { get; set; }

    [Display(Name = "IT Check By")]
    public int? ItcheckBy { get; set; }

    [Display(Name = "HR Check Date")]
    [Column("HRCheckDate", TypeName = "datetime")]
    public DateTime? HrcheckDate { get; set; }

    [Display(Name = "HR Check By")]
    [Column("HRCheckBy")]
    public int? HrcheckBy { get; set; }

    [Display(Name = "From Job Title")]
    public int? FromDepartmentJobTitleId { get; set; }

    [Display(Name = "To Job Title")]
    public int? ToDepartmentJobTitleId { get; set; }

    [Display(Name = "From Working Model")]
    public int? FromWorkingModelId { get; set; }

    [Display(Name = "To Working Model")]
    public int? ToWorkingModelId { get; set; }

    [ForeignKey("EmployeeId")]
    [InverseProperty("HeadCountItemEmployees")]
    public virtual Employee Employee { get; set; }

    [ForeignKey("FromDepartmentJobTitleId")]
    [InverseProperty("HeadCountItemFromDepartmentJobTitles")]
    public virtual JobTitle FromDepartmentJobTitle { get; set; }

    [ForeignKey("FromWorkingModelId")]
    [InverseProperty("HeadCountItemFromWorkingModels")]
    public virtual WorkingModel FromWorkingModel { get; set; }

    [ForeignKey("GenderId")]
    [InverseProperty("HeadCountItems")]
    public virtual Gender Gender { get; set; }

    [ForeignKey("HeadCountTypeId")]
    [InverseProperty("HeadCountItems")]
    public virtual HeadCountType HeadCountType { get; set; }

    [ForeignKey("IdentificationTypeId")]
    [InverseProperty("HeadCountItems")]
    public virtual IdentificationType IdentificationType { get; set; }

    [ForeignKey("JobTypeId")]
    [InverseProperty("HeadCountItems")]
    public virtual JobType JobType { get; set; }

    [ForeignKey("ManagerId")]
    [InverseProperty("HeadCountItemManagers")]
    public virtual Employee Manager { get; set; }

    [ForeignKey("MaritalStatusId")]
    [InverseProperty("HeadCountItems")]
    public virtual MaritalStatus MaritalStatus { get; set; }

    [ForeignKey("MilitaryStatusId")]
    [InverseProperty("HeadCountItems")]
    public virtual MilitaryStatus MilitaryStatus { get; set; }

    [ForeignKey("NationalityId")]
    [InverseProperty("HeadCountItems")]
    public virtual Country Nationality { get; set; }

    [ForeignKey("EmploymentTypeId")]
    [InverseProperty("HeadCountItems")]
    public virtual EmploymentType EmploymentType { get; set; }

    [ForeignKey("ToDepartmentJobTitleId")]
    [InverseProperty("HeadCountItemToDepartmentJobTitles")]
    public virtual JobTitle ToDepartmentJobTitle { get; set; }

    [ForeignKey("ToWorkingModelId")]
    [InverseProperty("HeadCountItemToWorkingModels")]
    public virtual WorkingModel ToWorkingModel { get; set; }
}